/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.util.*;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test
    public void testRoll() {
        Library sut = new Library();
        int n = 4;
        int[] rolls = sut.roll(n);
        assertEquals(n, rolls.length);
        for (int roll : rolls) {
            assertTrue(roll >= 1 && roll <= 6);
        }
    }
    @Test
    @DisplayName("testing for dupliactes")
    public void testDuplicates() {
        Library sut = new Library();
//        int[] testArray = new int[]{1, 2, 2, 3};
        int[] testArray = {1, 2, 2, 3};
        boolean results = sut.containsDuplicates(testArray);
        assertTrue(results);
    }

    @Test
    @DisplayName("test average")
    public void testAverage(){
        Library sut = new Library();
        int[] testArr = {1,2,3};
        double actualAverage = sut.calculateAverage(testArr);
        assertEquals(2.0, actualAverage);
    }

    @Test
    public void testFindUnseenTemperatures(){
        Library sut = new Library();

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        String result = Library.findUnseenTemperatures(weeklyMonthTemperatures);
        String expected = "69";
        assertEquals(expected, result);
    }

    @Test
    public void tally(){
        Library sut = new Library();
        List<String> votes = Arrays.asList("Bush", "Bush", "Bush", "Shrub", "Hedge", "Shrub", "Bush", "Hedge", "Bush");
        String winner = sut.tally(votes);
        assertEquals("Bush", winner, "Bush should be the winner as it has the most votes");
    }
}



//ChatGPT Help with test


